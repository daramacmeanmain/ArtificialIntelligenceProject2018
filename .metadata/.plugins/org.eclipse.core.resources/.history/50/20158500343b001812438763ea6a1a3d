package ie.gmit.sw.ai;

import java.util.Random;
import java.util.concurrent.ThreadLocalRandom;

public class SADecrypt {
	
	private PlayfairTable pt = new PlayfairTable();
	private GenKey gk = new GenKey();
	private int temp;
	private int transitions;
	
	public SADecrypt(int temp, int transitions){
		this.temp = temp;
		this.transitions = transitions;
	}
	
	public String shuffleKey(String shuffle){
		int index;
		 Random random = ThreadLocalRandom.current();
		 char[] child = shuffle.toCharArray();
		 for (int i = child.length - 1; i > 0; i--) {
			 index = random.nextInt(i + 1);
			 if (index != i) {
				 child[index] ^= child[i];
				 child[i] ^= child[index];
				 child[index] ^= child[i];
			 }
		 }
		 
		 return new String(child);
	}
	
	public void logProbability(String parent){
		for(int i = 10; i >= 0; i--)
			for(int j = 5000; j >= 0; j--){
				String child = shuffleKey(parent);
			}
	}

}
